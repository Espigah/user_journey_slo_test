version: '3.7'

services:
  basket:
    container_name: basket
    build:
      context: ./app
    ports:
      - 3000:3000
      - 9229:9229
    # command:
    #   - node
    #   - '--inspect-brk=0.0.0.0'
    #   - '.'
    environment:
      NEW_RELIC_LOG: stdout
      MESSAGE: 'basket ->'
      RABBIT_QUEUE_INPUT: 'ORDER_CREATED'
      RABBIT_QUEUE_OUTPUT: 'CREATE_ORDER'
      RABBIT_QUEUE_OUTPUT_IGNORE_MESSAGE: 'ordering'
      APP_NAME: 'basket'
    depends_on:
      - rabbitmq
      - grafana

  billing:
    container_name: billing
    build:
      context: ./app
    environment:
      NEW_RELIC_LOG: stdout
      MESSAGE: 'billing ->'
      RABBIT_QUEUE_INPUT: 'CREATE_ORDER'
      RABBIT_QUEUE_OUTPUT: 'BILLED_ORDER'
      APP_NAME: 'billing'
    depends_on:
      - rabbitmq
      - grafana

  ordering:
    container_name: ordering
    build:
      context: ./app
    environment:
      NEW_RELIC_LOG: stdout
      MESSAGE: 'ordering'
      RABBIT_QUEUE_INPUT: 'BILLED_ORDER'
      RABBIT_QUEUE_OUTPUT: 'ORDER_CREATED'
      APP_NAME: 'ordering'
    depends_on:
      - rabbitmq
      - grafana

  rabbitmq:
    image: rabbitmq:3.9.8-management
    ports:
      - '15672:15672'
      - '5672:5672'
    environment:
      - RABBITMQ_ERLANG_COOKIE=This_is_my_secret_phrase
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  prometheus:
    image: prom/prometheus:v2.15.2
    container_name: prometheus
    volumes:
      - type: bind
        source: ./prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
  #  network_mode: 'host' # para que seja possivel chegar no backend com localhost

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: grafana
    depends_on:
      - prometheus
    ports:
      - '3001:3001'
    environment:
      GF_SERVER_HTTP_PORT: '3001' # para nao colidir com o backend
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
  #  network_mode: 'host'
